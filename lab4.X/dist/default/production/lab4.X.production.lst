

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Oct 08 15:07:37 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     0007                     	;# 
    63     0008                     	;# 
    64     0009                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     0088                     	;# 
    95     0089                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0093                     	;# 
   105     0093                     	;# 
   106     0094                     	;# 
   107     0095                     	;# 
   108     0096                     	;# 
   109     0097                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009A                     	;# 
   113     009B                     	;# 
   114     009C                     	;# 
   115     009D                     	;# 
   116     009E                     	;# 
   117     009F                     	;# 
   118     0105                     	;# 
   119     0107                     	;# 
   120     0108                     	;# 
   121     0109                     	;# 
   122     010C                     	;# 
   123     010C                     	;# 
   124     010D                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0185                     	;# 
   128     0187                     	;# 
   129     0188                     	;# 
   130     0189                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     008F                     	;# 
   178     0090                     	;# 
   179     0091                     	;# 
   180     0092                     	;# 
   181     0093                     	;# 
   182     0093                     	;# 
   183     0093                     	;# 
   184     0094                     	;# 
   185     0095                     	;# 
   186     0096                     	;# 
   187     0097                     	;# 
   188     0098                     	;# 
   189     0099                     	;# 
   190     009A                     	;# 
   191     009B                     	;# 
   192     009C                     	;# 
   193     009D                     	;# 
   194     009E                     	;# 
   195     009F                     	;# 
   196     0105                     	;# 
   197     0107                     	;# 
   198     0108                     	;# 
   199     0109                     	;# 
   200     010C                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     0185                     	;# 
   206     0187                     	;# 
   207     0188                     	;# 
   208     0189                     	;# 
   209     018C                     	;# 
   210     018D                     	;# 
   211     0006                     _PORTBbits	set	6
   212     000B                     _INTCONbits	set	11
   213     0008                     _PORTD	set	8
   214     0007                     _PORTC	set	7
   215     0006                     _PORTB	set	6
   216     0005                     _PORTA	set	5
   217     008F                     _OSCCONbits	set	143
   218     0096                     _IOCBbits	set	150
   219     0095                     _WPUBbits	set	149
   220     0081                     _OPTION_REGbits	set	129
   221     0088                     _TRISD	set	136
   222     0087                     _TRISC	set	135
   223     0086                     _TRISBbits	set	134
   224     0085                     _TRISA	set	133
   225     0189                     _ANSELH	set	393
   226     0188                     _ANSEL	set	392
   227                           
   228                           	psect	cinit
   229     000F                     start_initialization:	
   230                           ; #config settings
   231                           
   232     000F                     __initialization:
   233                           
   234                           ; Clear objects allocated to COMMON
   235     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   236     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   237     0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   238     0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   239     0013                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242     0013                     __end_of__initialization:
   243     0013  0183               	clrf	3
   244     0014  120A  118A  289C   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247     0070                     __pbssCOMMON:
   248     0070                     _bandera1:
   249     0070                     	ds	2
   250     0072                     _bandera:
   251     0072                     	ds	2
   252                           
   253                           	psect	cstackCOMMON
   254     0074                     __pcstackCOMMON:
   255     0074                     ?_setup:
   256     0074                     ?_contador:	
   257                           ; 1 bytes @ 0x0
   258                           
   259     0074                     ?_antirrebote:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0074                     ??_antirrebote:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0074                     ?_contadors:	
   266                           ; 1 bytes @ 0x0
   267                           
   268     0074                     ??_contadors:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0074                     ?_antirrebote1:	
   272                           ; 1 bytes @ 0x0
   273                           
   274     0074                     ??_antirrebote1:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0074                     ?_contadorr:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0074                     ??_contadorr:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0074                     ?_main:	
   284                           ; 1 bytes @ 0x0
   285                           
   286     0074                     ?_isr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289                           
   290                           ; 1 bytes @ 0x0
   291     0074                     	ds	1
   292     0075                     ??_contador:
   293     0075                     ??_isr:	
   294                           ; 1 bytes @ 0x1
   295                           
   296                           
   297                           ; 1 bytes @ 0x1
   298     0075                     	ds	2
   299     0077                     ??_setup:
   300     0077                     ??_main:	
   301                           ; 1 bytes @ 0x3
   302                           
   303                           
   304                           	psect	maintext
   305     009C                     __pmaintext:	
   306                           ; 1 bytes @ 0x3
   307 ;;
   308 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   309 ;;
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 40 in file "main.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		status,2, status,0, pclath, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : B00/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0
   328 ;;      Temps:          0       0       0       0       0
   329 ;;      Totals:         0       0       0       0       0
   330 ;;Total ram usage:        0 bytes
   331 ;; Hardware stack levels required when called: 4
   332 ;; This function calls:
   333 ;;		_setup
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339     009C                     _main:	
   340                           ;psect for function _main
   341                           
   342     009C                     l738:	
   343                           ;incstack = 0
   344                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   345                           
   346                           
   347                           ;main.c: 41:     setup();
   348     009C  120A  118A  2044  120A  118A  	fcall	_setup
   349     00A1                     l53:	
   350                           ;main.c: 42:     while(1){
   351                           
   352     00A1                     l54:	
   353                           ;main.c: 43:     }
   354                           
   355     00A1  28A1               	goto	l53
   356     00A2  120A  118A  280C   	ljmp	start
   357     00A5                     __end_of_main:
   358                           
   359                           	psect	text1
   360     0044                     __ptext1:	
   361 ;; *************** function _setup *****************
   362 ;; Defined at:
   363 ;;		line 46 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;		None
   368 ;; Return value:  Size  Location     Type
   369 ;;                  1    wreg      void 
   370 ;; Registers used:
   371 ;;		status,2
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   377 ;;      Params:         0       0       0       0       0
   378 ;;      Locals:         0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0
   380 ;;      Totals:         0       0       0       0       0
   381 ;;Total ram usage:        0 bytes
   382 ;; Hardware stack levels used: 1
   383 ;; Hardware stack levels required when called: 3
   384 ;; This function calls:
   385 ;;		Nothing
   386 ;; This function is called by:
   387 ;;		_main
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391     0044                     _setup:	
   392                           ;psect for function _setup
   393                           
   394     0044                     l694:	
   395                           ;incstack = 0
   396                           ; Regs used in _setup: [status,2]
   397                           
   398                           
   399                           ;main.c: 47:     ANSEL = 0;
   400     0044  1683               	bsf	3,5	;RP0=1, select bank3
   401     0045  1703               	bsf	3,6	;RP1=1, select bank3
   402     0046  0188               	clrf	8	;volatile
   403                           
   404                           ;main.c: 48:     ANSELH = 0;
   405     0047  0189               	clrf	9	;volatile
   406                           
   407                           ;main.c: 49:     TRISA = 0;
   408     0048  1683               	bsf	3,5	;RP0=1, select bank1
   409     0049  1303               	bcf	3,6	;RP1=0, select bank1
   410     004A  0185               	clrf	5	;volatile
   411                           
   412                           ;main.c: 50:     PORTA = 0;
   413     004B  1283               	bcf	3,5	;RP0=0, select bank0
   414     004C  1303               	bcf	3,6	;RP1=0, select bank0
   415     004D  0185               	clrf	5	;volatile
   416     004E                     l696:
   417                           
   418                           ;main.c: 51:     TRISBbits.TRISB7 = 1;
   419     004E  1683               	bsf	3,5	;RP0=1, select bank1
   420     004F  1303               	bcf	3,6	;RP1=0, select bank1
   421     0050  1786               	bsf	6,7	;volatile
   422     0051                     l698:
   423                           
   424                           ;main.c: 52:     TRISBbits.TRISB6 = 1;
   425     0051  1706               	bsf	6,6	;volatile
   426                           
   427                           ;main.c: 53:     PORTB = 0;
   428     0052  1283               	bcf	3,5	;RP0=0, select bank0
   429     0053  1303               	bcf	3,6	;RP1=0, select bank0
   430     0054  0186               	clrf	6	;volatile
   431                           
   432                           ;main.c: 54:     TRISC = 0;
   433     0055  1683               	bsf	3,5	;RP0=1, select bank1
   434     0056  1303               	bcf	3,6	;RP1=0, select bank1
   435     0057  0187               	clrf	7	;volatile
   436                           
   437                           ;main.c: 55:     PORTC = 0;
   438     0058  1283               	bcf	3,5	;RP0=0, select bank0
   439     0059  1303               	bcf	3,6	;RP1=0, select bank0
   440     005A  0187               	clrf	7	;volatile
   441                           
   442                           ;main.c: 56:     TRISD = 0;
   443     005B  1683               	bsf	3,5	;RP0=1, select bank1
   444     005C  1303               	bcf	3,6	;RP1=0, select bank1
   445     005D  0188               	clrf	8	;volatile
   446                           
   447                           ;main.c: 57:     PORTD = 0;
   448     005E  1283               	bcf	3,5	;RP0=0, select bank0
   449     005F  1303               	bcf	3,6	;RP1=0, select bank0
   450     0060  0188               	clrf	8	;volatile
   451     0061                     l700:
   452                           
   453                           ;main.c: 59:     OPTION_REGbits.nRBPU = 0;
   454     0061  1683               	bsf	3,5	;RP0=1, select bank1
   455     0062  1303               	bcf	3,6	;RP1=0, select bank1
   456     0063  1381               	bcf	1,7	;volatile
   457     0064                     l702:
   458                           
   459                           ;main.c: 60:     INTCONbits.GIE = 1;
   460     0064  178B               	bsf	11,7	;volatile
   461     0065                     l704:
   462                           
   463                           ;main.c: 61:     INTCONbits.RBIE = 1;
   464     0065  158B               	bsf	11,3	;volatile
   465     0066                     l706:
   466                           
   467                           ;main.c: 62:     WPUBbits.WPUB7 = 1;
   468     0066  1795               	bsf	21,7	;volatile
   469     0067                     l708:
   470                           
   471                           ;main.c: 63:     WPUBbits.WPUB6 = 1;
   472     0067  1715               	bsf	21,6	;volatile
   473     0068                     l710:
   474                           
   475                           ;main.c: 64:     IOCBbits.IOCB7 = 1;
   476     0068  1796               	bsf	22,7	;volatile
   477     0069                     l712:
   478                           
   479                           ;main.c: 65:     IOCBbits.IOCB6 = 1;
   480     0069  1716               	bsf	22,6	;volatile
   481     006A                     l714:
   482                           
   483                           ;main.c: 67:     OSCCONbits.IRCF0 = 1;
   484     006A  160F               	bsf	15,4	;volatile
   485     006B                     l716:
   486                           
   487                           ;main.c: 68:     OSCCONbits.IRCF1 = 1;
   488     006B  168F               	bsf	15,5	;volatile
   489     006C                     l718:
   490                           
   491                           ;main.c: 69:     OSCCONbits.IRCF0 = 0;
   492     006C  120F               	bcf	15,4	;volatile
   493     006D                     l720:
   494                           
   495                           ;main.c: 70:     OSCCONbits.SCS = 1;
   496     006D  140F               	bsf	15,0	;volatile
   497     006E                     l59:
   498     006E  0008               	return
   499     006F                     __end_of_setup:
   500                           
   501                           	psect	text2
   502     006F                     __ptext2:	
   503 ;; *************** function _isr *****************
   504 ;; Defined at:
   505 ;;		line 73 in file "main.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, pclath, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0
   521 ;;      Temps:          2       0       0       0       0
   522 ;;      Totals:         2       0       0       0       0
   523 ;;Total ram usage:        2 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 2
   526 ;; This function calls:
   527 ;;		_contador
   528 ;; This function is called by:
   529 ;;		Interrupt level 1
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533     006F                     _isr:	
   534                           ;psect for function _isr
   535                           
   536     006F                     i1l740:
   537                           
   538                           ;main.c: 74:     if (INTCONbits.RBIF == 1){
   539     006F  1C0B               	btfss	11,0	;volatile
   540     0070  2872               	goto	u7_21
   541     0071  2873               	goto	u7_20
   542     0072                     u7_21:
   543     0072  2879               	goto	i1l65
   544     0073                     u7_20:
   545     0073                     i1l742:
   546                           
   547                           ;main.c: 75:         INTCONbits.RBIF = 0;
   548     0073  100B               	bcf	11,0	;volatile
   549     0074                     i1l744:
   550                           
   551                           ;main.c: 76:         contador();
   552     0074  120A  118A  2017  120A  118A  	fcall	_contador
   553     0079                     i1l65:
   554     0079  0876               	movf	??_isr+1,w
   555     007A  008A               	movwf	10
   556     007B  0E75               	swapf	??_isr,w
   557     007C  0083               	movwf	3
   558     007D  0EFE               	swapf	btemp,f
   559     007E  0E7E               	swapf	btemp,w
   560     007F  0009               	retfie
   561     0080                     __end_of_isr:
   562                           
   563                           	psect	intentry
   564     0004                     __pintentry:	
   565                           ;incstack = 0
   566                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   567                           
   568     0004                     interrupt_function:
   569     007E                     saved_w	set	btemp
   570     0004  00FE               	movwf	btemp
   571     0005  0E03               	swapf	3,w
   572     0006  00F5               	movwf	??_isr
   573     0007  080A               	movf	10,w
   574     0008  00F6               	movwf	??_isr+1
   575     0009  120A  118A  286F   	ljmp	_isr
   576                           
   577                           	psect	text3
   578     0017                     __ptext3:	
   579 ;; *************** function _contador *****************
   580 ;; Defined at:
   581 ;;		line 81 in file "main.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, pclath, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; Hardware stack levels required when called: 1
   602 ;; This function calls:
   603 ;;		_antirrebote
   604 ;;		_antirrebote1
   605 ;;		_contadorr
   606 ;;		_contadors
   607 ;; This function is called by:
   608 ;;		_isr
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612     0017                     _contador:	
   613                           ;psect for function _contador
   614                           
   615     0017                     i1l722:	
   616                           ;incstack = 0
   617                           ; Regs used in _contador: [wreg+status,2+status,0+pclath+cstack]
   618                           
   619                           
   620                           ;main.c: 82:     if (PORTBbits.RB7 == 0){
   621     0017  1283               	bcf	3,5	;RP0=0, select bank0
   622     0018  1303               	bcf	3,6	;RP1=0, select bank0
   623     0019  1B86               	btfsc	6,7	;volatile
   624     001A  281C               	goto	u3_21
   625     001B  281D               	goto	u3_20
   626     001C                     u3_21:
   627     001C  2822               	goto	i1l726
   628     001D                     u3_20:
   629     001D                     i1l724:
   630                           
   631                           ;main.c: 83:         antirrebote();}
   632     001D  120A  118A  20AA  120A  118A  	fcall	_antirrebote
   633     0022                     i1l726:
   634                           
   635                           ;main.c: 84:     if (PORTBbits.RB7 == 1) {
   636     0022  1283               	bcf	3,5	;RP0=0, select bank0
   637     0023  1303               	bcf	3,6	;RP1=0, select bank0
   638     0024  1F86               	btfss	6,7	;volatile
   639     0025  2827               	goto	u4_21
   640     0026  2828               	goto	u4_20
   641     0027                     u4_21:
   642     0027  282D               	goto	i1l730
   643     0028                     u4_20:
   644     0028                     i1l728:
   645                           
   646                           ;main.c: 85:         contadors();
   647     0028  120A  118A  2080  120A  118A  	fcall	_contadors
   648     002D                     i1l730:
   649                           
   650                           ;main.c: 87:     if (PORTBbits.RB6 == 0){
   651     002D  1283               	bcf	3,5	;RP0=0, select bank0
   652     002E  1303               	bcf	3,6	;RP1=0, select bank0
   653     002F  1B06               	btfsc	6,6	;volatile
   654     0030  2832               	goto	u5_21
   655     0031  2833               	goto	u5_20
   656     0032                     u5_21:
   657     0032  2838               	goto	i1l734
   658     0033                     u5_20:
   659     0033                     i1l732:
   660                           
   661                           ;main.c: 88:         antirrebote1();}
   662     0033  120A  118A  20A5  120A  118A  	fcall	_antirrebote1
   663     0038                     i1l734:
   664                           
   665                           ;main.c: 89:     if (PORTBbits.RB6 == 1) {
   666     0038  1283               	bcf	3,5	;RP0=0, select bank0
   667     0039  1303               	bcf	3,6	;RP1=0, select bank0
   668     003A  1F06               	btfss	6,6	;volatile
   669     003B  283D               	goto	u6_21
   670     003C  283E               	goto	u6_20
   671     003D                     u6_21:
   672     003D  2843               	goto	i1l72
   673     003E                     u6_20:
   674     003E                     i1l736:
   675                           
   676                           ;main.c: 90:         contadorr();
   677     003E  120A  118A  208F  120A  118A  	fcall	_contadorr
   678     0043                     i1l72:
   679     0043  0008               	return
   680     0044                     __end_of_contador:
   681                           
   682                           	psect	text4
   683     0080                     __ptext4:	
   684 ;; *************** function _contadors *****************
   685 ;; Defined at:
   686 ;;		line 96 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2, status,0
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   700 ;;      Params:         0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0
   702 ;;      Temps:          1       0       0       0       0
   703 ;;      Totals:         1       0       0       0       0
   704 ;;Total ram usage:        1 bytes
   705 ;; Hardware stack levels used: 1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_contador
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713     0080                     _contadors:	
   714                           ;psect for function _contadors
   715                           
   716     0080                     i1l680:	
   717                           ;incstack = 0
   718                           ; Regs used in _contadors: [wreg+status,2+status,0]
   719                           
   720                           
   721                           ;main.c: 97:     if (bandera == 1){
   722     0080  0372               	decf	_bandera,w
   723     0081  0473               	iorwf	_bandera+1,w
   724     0082  1D03               	btfss	3,2
   725     0083  2885               	goto	u1_21
   726     0084  2886               	goto	u1_20
   727     0085                     u1_21:
   728     0085  288E               	goto	i1l76
   729     0086                     u1_20:
   730     0086                     i1l682:
   731                           
   732                           ;main.c: 98:         PORTD++;
   733     0086  3001               	movlw	1
   734     0087  00F4               	movwf	??_contadors
   735     0088  0874               	movf	??_contadors,w
   736     0089  1283               	bcf	3,5	;RP0=0, select bank0
   737     008A  1303               	bcf	3,6	;RP1=0, select bank0
   738     008B  0788               	addwf	8,f	;volatile
   739     008C                     i1l684:
   740                           
   741                           ;main.c: 99:         bandera = 0;
   742     008C  01F2               	clrf	_bandera
   743     008D  01F3               	clrf	_bandera+1
   744     008E                     i1l76:
   745     008E  0008               	return
   746     008F                     __end_of_contadors:
   747                           
   748                           	psect	text5
   749     008F                     __ptext5:	
   750 ;; *************** function _contadorr *****************
   751 ;; Defined at:
   752 ;;		line 103 in file "main.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   766 ;;      Params:         0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_contador
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779     008F                     _contadorr:	
   780                           ;psect for function _contadorr
   781                           
   782     008F                     i1l688:	
   783                           ;incstack = 0
   784                           ; Regs used in _contadorr: [wreg+status,2+status,0]
   785                           
   786                           
   787                           ;main.c: 104:     if (bandera1 == 1){
   788     008F  0370               	decf	_bandera1,w
   789     0090  0471               	iorwf	_bandera1+1,w
   790     0091  1D03               	btfss	3,2
   791     0092  2894               	goto	u2_21
   792     0093  2895               	goto	u2_20
   793     0094                     u2_21:
   794     0094  289B               	goto	i1l80
   795     0095                     u2_20:
   796     0095                     i1l690:
   797                           
   798                           ;main.c: 105:         PORTD--;
   799     0095  3001               	movlw	1
   800     0096  1283               	bcf	3,5	;RP0=0, select bank0
   801     0097  1303               	bcf	3,6	;RP1=0, select bank0
   802     0098  0288               	subwf	8,f	;volatile
   803     0099                     i1l692:
   804                           
   805                           ;main.c: 106:         bandera1 = 0;
   806     0099  01F0               	clrf	_bandera1
   807     009A  01F1               	clrf	_bandera1+1
   808     009B                     i1l80:
   809     009B  0008               	return
   810     009C                     __end_of_contadorr:
   811                           
   812                           	psect	text6
   813     00A5                     __ptext6:	
   814 ;; *************** function _antirrebote1 *****************
   815 ;; Defined at:
   816 ;;		line 114 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0
   833 ;;      Totals:         0       0       0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_contador
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843     00A5                     _antirrebote1:	
   844                           ;psect for function _antirrebote1
   845                           
   846     00A5                     i1l686:	
   847                           ;incstack = 0
   848                           ; Regs used in _antirrebote1: [wreg]
   849                           
   850                           
   851                           ;main.c: 115:     bandera1 = 1;
   852     00A5  3001               	movlw	1
   853     00A6  00F0               	movwf	_bandera1
   854     00A7  3000               	movlw	0
   855     00A8  00F1               	movwf	_bandera1+1
   856     00A9                     i1l86:
   857     00A9  0008               	return
   858     00AA                     __end_of_antirrebote1:
   859                           
   860                           	psect	text7
   861     00AA                     __ptext7:	
   862 ;; *************** function _antirrebote *****************
   863 ;; Defined at:
   864 ;;		line 110 in file "main.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used: 1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_contador
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891     00AA                     _antirrebote:	
   892                           ;psect for function _antirrebote
   893                           
   894     00AA                     i1l678:	
   895                           ;incstack = 0
   896                           ; Regs used in _antirrebote: [wreg]
   897                           
   898                           
   899                           ;main.c: 111:     bandera = 1;
   900     00AA  3001               	movlw	1
   901     00AB  00F2               	movwf	_bandera
   902     00AC  3000               	movlw	0
   903     00AD  00F3               	movwf	_bandera+1
   904     00AE                     i1l83:
   905     00AE  0008               	return
   906     00AF                     __end_of_antirrebote:
   907     007E                     btemp	set	126	;btemp
   908     007E                     wtemp0	set	126
   909                           
   910                           	psect	idloc
   911                           
   912                           ;Config register IDLOC0 @ 0x2000
   913                           ;	unspecified, using default values
   914     2000                     	org	8192
   915     2000  3FFF               	dw	16383
   916                           
   917                           ;Config register IDLOC1 @ 0x2001
   918                           ;	unspecified, using default values
   919     2001                     	org	8193
   920     2001  3FFF               	dw	16383
   921                           
   922                           ;Config register IDLOC2 @ 0x2002
   923                           ;	unspecified, using default values
   924     2002                     	org	8194
   925     2002  3FFF               	dw	16383
   926                           
   927                           ;Config register IDLOC3 @ 0x2003
   928                           ;	unspecified, using default values
   929     2003                     	org	8195
   930     2003  3FFF               	dw	16383
   931                           
   932                           	psect	config
   933                           
   934                           ;Config register CONFIG1 @ 0x2007
   935                           ;	Oscillator Selection bits
   936                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   937                           ;	Watchdog Timer Enable bit
   938                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   939                           ;	Power-up Timer Enable bit
   940                           ;	PWRTE = OFF, PWRT disabled
   941                           ;	RE3/MCLR pin function select bit
   942                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   943                           ;	Code Protection bit
   944                           ;	CP = OFF, Program memory code protection is disabled
   945                           ;	Data Code Protection bit
   946                           ;	CPD = OFF, Data memory code protection is disabled
   947                           ;	Brown Out Reset Selection bits
   948                           ;	BOREN = OFF, BOR disabled
   949                           ;	Internal External Switchover bit
   950                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   951                           ;	Fail-Safe Clock Monitor Enabled bit
   952                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   953                           ;	Low Voltage Programming Enable bit
   954                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   955                           ;	In-Circuit Debugger Mode bit
   956                           ;	DEBUG = 0x1, unprogramme   957     2007                     	org	8199
   958     2007  20D4               	dw	8404
   959                           
   960                           ;Config register CONFIG2 @ 0x2008
   961                           ;	Brown-out Reset Selection bit
   962                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   963                           ;	Flash Program Memory Self Write Enable bits
   964                           ;	WRT = OFF, Write protection off
   965     2008                     	org	8200
   966     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _contador->_contadors

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  2     2      0       0
                                              1 COMMON     2     2      0
                           _contador
 ---------------------------------------------------------------------------------
 (3) _contador                                             0     0      0       0
                        _antirrebote
                       _antirrebote1
                          _contadorr
                          _contadors
 ---------------------------------------------------------------------------------
 (4) _contadors                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _contadorr                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _antirrebote1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _antirrebote                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _contador
     _antirrebote
     _antirrebote1
     _contadorr
     _contadors

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Oct 08 15:07:37 2022

           ?_antirrebote 0074            ?_antirrebote1 0074                       l53 00A1  
                     l54 00A1                       l59 006E                      l700 0061  
                    l710 0068                      l702 0064                      l720 006D  
                    l712 0069                      l704 0065                      l714 006A  
                    l706 0066                      l716 006B                      l708 0067  
                    l718 006C                      l738 009C                      l694 0044  
                    l696 004E                      l698 0051                      _isr 006F  
                   ?_isr 0074                     i1l80 009B                     i1l72 0043  
                   i1l65 0079                     i1l83 00AE                     i1l76 008E  
                   i1l86 00A9                     u1_20 0086                     u1_21 0085  
                   u2_20 0095                     u2_21 0094                     u3_20 001D  
                   u3_21 001C                     u4_20 0028                     u4_21 0027  
                   u5_20 0033                     u5_21 0032                     u6_20 003E  
                   u6_21 003D                     u7_20 0073                     u7_21 0072  
                   _main 009C                     btemp 007E                     start 000C  
         ??_antirrebote1 0074                    ??_isr 0075                    ?_main 0074  
                  _ANSEL 0188                    i1l730 002D                    i1l722 0017  
                  i1l732 0033                    i1l724 001D                    i1l740 006F  
                  i1l734 0038                    i1l726 0022                    i1l742 0073  
                  i1l680 0080                    i1l736 003E                    i1l728 0028  
                  i1l744 0074                    i1l690 0095                    i1l682 0086  
                  i1l692 0099                    i1l684 008C                    i1l678 00AA  
                  i1l686 00A5                    i1l688 008F                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
                  _setup 0044                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00A5  
                 ??_main 0077                   ?_setup 0074                   _ANSELH 0189  
       __end_of_contador 0044                   saved_w 007E     __end_of_antirrebote1 00AA  
__end_of__initialization 0013           __pcstackCOMMON 0074            __end_of_setup 006F  
         _OPTION_REGbits 0081                  ??_setup 0077               __pmaintext 009C  
             __pintentry 0004                ?_contador 0074        __end_of_contadorr 009C  
      __end_of_contadors 008F                  _bandera 0072                  __ptext1 0044  
                __ptext2 006F                  __ptext3 0017                  __ptext4 0080  
                __ptext5 008F                  __ptext6 00A5                  __ptext7 00AA  
   end_of_initialization 0013               ??_contador 0075             _antirrebote1 00A5  
              _PORTBbits 0006                _TRISBbits 0086            ??_antirrebote 0074  
    start_initialization 000F              __end_of_isr 0080      __end_of_antirrebote 00AF  
            __pbssCOMMON 0070                ___latbits 0002                _contadorr 008F  
              _contadors 0080        interrupt_function 0004                 _IOCBbits 0096  
            _antirrebote 00AA               ?_contadorr 0074               ?_contadors 0074  
               _WPUBbits 0095                 _bandera1 0070                 _contador 0017  
            ??_contadorr 0074              ??_contadors 0074               _INTCONbits 000B  
               intlevel1 0000               _OSCCONbits 008F  
